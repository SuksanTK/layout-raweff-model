import streamlit as st
import pandas as pd
import io

# ========== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ========== #
st.set_page_config(page_title="Data Processing App", layout="wide")
st.title("‚öôÔ∏è Data Processing Automation")
st.markdown("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå > ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ó‡πá‡∏ö > ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• > ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")

# ========== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà 1 ========== #
def process_layout_joiner(layout_file, stylelist_file):
    """
    ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Join ‡πÑ‡∏ü‡∏•‡πå layout_master ‡πÅ‡∏•‡∏∞ stylelistcode
    """
    try:
        layout_master = pd.read_csv(layout_file)
        stylelistcode = pd.read_csv(stylelist_file)

        # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ JOIN ‡∏ï‡∏≤‡∏° Logic ‡πÄ‡∏î‡∏¥‡∏°
        merged_df = pd.merge(
            layout_master, 
            stylelistcode, 
            how='inner', 
            left_on='LINELAYOUT', 
            right_on='LINELAYOUT'
        )
        return merged_df
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Layout Joiner: {e}")
        return None

# ========== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà 2 ========== #
def process_rawdata_model(rawdata_file, stylelist_file):
    """
    ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Rawdata ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Model
    """
    try:
        rawdata_df = pd.read_csv(rawdata_file)
        stylelistcode_df = pd.read_csv(stylelist_file)

        # 2. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        rawdata_df.columns = rawdata_df.columns.str.strip().str.lower()
        stylelistcode_df.columns = stylelistcode_df.columns.str.strip().str.lower()

        # 3. INNER JOIN
        merged_df = pd.merge(rawdata_df, stylelistcode_df, on='group', how='inner')

        # 4. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        required_columns = ['line', 'linkeff', 'linkop', 'id', 'shift', 'style', 'group', 'jobtitle', 'eff']
        for col in required_columns:
            if col not in merged_df.columns:
                merged_df[col] = 0 if pd.api.types.is_numeric_dtype(merged_df[col].dtype) else 'N/A'

        # 5. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì eff_adjusted
        merged_df['eff'] = pd.to_numeric(merged_df['eff'], errors='coerce').fillna(0)
        merged_df['eff_adjusted'] = merged_df['eff'] * 1.05

        # 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á rank
        merged_df['rank'] = merged_df.groupby(['id', 'group', 'jobtitle'])['eff_adjusted'] \
                                     .rank(method='first', ascending=False)

        # 7. ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        top3_df = merged_df[(merged_df['rank'] <= 3) & (merged_df['eff'] >= 35)]

        # 8. Group by ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
        agg_df = top3_df.groupby(['linkeff', 'linkop', 'id', 'line', 'shift', 'style', 'group', 'jobtitle'], as_index=False)['eff'].mean()

        # 9. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        agg_df = agg_df.rename(columns={'eff': 'AvgEff'})
        
        return agg_df
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Raw Data Processor: {e}")
        return None

# ========== ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á UI (User Interface) ========== #

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå (Sidebar) --- #
with st.sidebar:
    st.header("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV")
    
    uploaded_layout_master = st.file_uploader("1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î layout_master.csv", type=["csv"])
    uploaded_stylelistcode = st.file_uploader("2. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î stylelistcode.csv", type=["csv"])
    uploaded_rawdata_all = st.file_uploader("3. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î RawdataALL.csv", type=["csv"])

# --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Process --- #
tab1, tab2 = st.tabs(["Process 1: Layout Joiner", "Process 2: Raw Data Model"])

# --- ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà 1 --- #
with tab1:
    st.header("üîó ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå Layout Master ‡πÅ‡∏•‡∏∞ Style List")
    st.markdown("‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå `layout_master.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv`")
    
    run_process1 = st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Layout Joiner", key="btn1")

    if run_process1:
        if uploaded_layout_master and uploaded_stylelistcode:
            with st.spinner('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå...'):
                # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô session_state
                st.session_state.df_result1 = process_layout_joiner(uploaded_layout_master, uploaded_stylelistcode)
            
            if st.session_state.df_result1 is not None:
                st.success("‚úÖ ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå `layout_master.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv` ‡∏Å‡πà‡∏≠‡∏ô")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô session_state)
    if 'df_result1' in st.session_state and st.session_state.df_result1 is not None:
        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
        st.dataframe(st.session_state.df_result1)
        
        # ‡πÅ‡∏õ‡∏•‡∏á DataFrame ‡πÄ‡∏õ‡πá‡∏ô CSV ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        csv_data = st.session_state.df_result1.to_csv(index=False).encode('utf-8')
        
        st.download_button(
            label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (Layout_week18_22.csv)",
            data=csv_data,
            file_name='Layout_week18_22.csv',
            mime='text/csv',
        )

# --- ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà 2 --- #
with tab2:
    st.header("üìà ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Raw Data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    st.markdown("‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå `RawdataALL.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv`")

    run_process2 = st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Raw Data Model", key="btn2")

    if run_process2:
        if uploaded_rawdata_all and uploaded_stylelistcode:
            with st.spinner('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...'):
                # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô session_state
                st.session_state.df_result2 = process_rawdata_model(uploaded_rawdata_all, uploaded_stylelistcode)
            
            if st.session_state.df_result2 is not None:
                st.success("‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå `RawdataALL.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv` ‡∏Å‡πà‡∏≠‡∏ô")
            
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    if 'df_result2' in st.session_state and st.session_state.df_result2 is not None:
        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
        st.dataframe(st.session_state.df_result2)

        # ‡πÅ‡∏õ‡∏•‡∏á DataFrame ‡πÄ‡∏õ‡πá‡∏ô CSV ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        csv_data = st.session_state.df_result2.to_csv(index=False).encode('utf-8')
        
        st.download_button(
            label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (RAWDATA_MODEL_ALL1.csv)",
            data=csv_data,
            file_name='RAWDATA_MODEL_ALL1.csv',
            mime='text/csv',
        )