import streamlit as st
import pandas as pd
import io

# ========== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ========== #
st.set_page_config(page_title="Data Processing App", layout="wide")
st.title("‚öôÔ∏è Data Processing Automation")
st.markdown("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå > ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ó‡πá‡∏ö > ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• > ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")

# ========== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà 1 (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ========== #
def process_layout_joiner(layout_file, stylelist_file):
    try:
        layout_master = pd.read_csv(layout_file, encoding='utf-8-sig')
        stylelistcode = pd.read_csv(stylelist_file, encoding='utf-8-sig')
        merged_df = pd.merge(
            layout_master, 
            stylelistcode, 
            how='inner', 
            left_on='LINELAYOUT', 
            right_on='LINELAYOUT'
        )
        return merged_df
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Layout Joiner: {e}")
        return None

# ========== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà 2 (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö) ========== #
def process_rawdata_model(rawdata_file, stylelist_file):
    try:
        rawdata_df = pd.read_csv(rawdata_file, encoding='utf-8-sig')
        stylelistcode_df = pd.read_csv(stylelist_file, encoding='utf-8-sig')

        rawdata_df.columns = rawdata_df.columns.str.strip().str.lower()
        stylelistcode_df.columns = stylelistcode_df.columns.str.strip().str.lower()

        # --- DEBUG 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏Å‡πà‡∏≠‡∏ô" ‡∏Å‡∏≤‡∏£ Merge ---
        st.info("‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '‡∏Å‡πà‡∏≠‡∏ô' ‡∏Å‡∏≤‡∏£ Merge")
        st.write("**‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô `RawdataALL.csv`:**")
        st.write(rawdata_df.columns.tolist())
        st.write("**‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô `stylelistcode.csv`:**")
        st.write(stylelistcode_df.columns.tolist())
        # -----------------------------------------------

        merged_df = pd.merge(rawdata_df, stylelistcode_df, on='group', how='inner')
        
        # --- DEBUG 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏´‡∏•‡∏±‡∏á" ‡∏Å‡∏≤‡∏£ Merge ---
        st.info("‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '‡∏´‡∏•‡∏±‡∏á' ‡∏Å‡∏≤‡∏£ Merge")
        st.write("**‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ Merge ‡∏Ñ‡∏∑‡∏≠:**")
        st.write(merged_df.columns.tolist())
        # --------------------------------------------

        # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠ 'line_x' ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô 'line'
        if 'line_x' in merged_df.columns:
            st.warning("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'line_x' (‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô) ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô 'line'")
            merged_df = merged_df.rename(columns={'line_x': 'line'})

        required_columns = ['line', 'linkeff', 'linkop', 'id', 'shift', 'style', 'group', 'jobtitle', 'eff']
        for col in required_columns:
            if col not in merged_df.columns:
                st.error(f"‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô '{col}' ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô")
                return None

        merged_df['eff'] = pd.to_numeric(merged_df['eff'], errors='coerce').fillna(0)
        merged_df['eff_adjusted'] = merged_df['eff'] * 1.05
        merged_df['rank'] = merged_df.groupby(['id', 'group', 'jobtitle'])['eff_adjusted'] \
                                     .rank(method='first', ascending=False)
        top3_df = merged_df[(merged_df['rank'] <= 3) & (merged_df['eff'] >= 35)]
        
        if top3_df.empty:
            st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á (rank <= 3 ‡πÅ‡∏•‡∏∞ eff >= 35) ‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")
            return pd.DataFrame()

        agg_df = top3_df.groupby(['linkeff', 'linkop', 'id', 'line', 'shift', 'style', 'group', 'jobtitle'], as_index=False)['eff'].mean()
        agg_df = agg_df.rename(columns={'eff': 'AvgEff'})
        
        return agg_df
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Raw Data Processor: {e}")
        return None

# ========== ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á UI (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ========== #
with st.sidebar:
    st.header("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV")
    uploaded_layout_master = st.file_uploader("1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î layout_master.csv", type=["csv"])
    uploaded_stylelistcode = st.file_uploader("2. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î stylelistcode.csv", type=["csv"])
    uploaded_rawdata_all = st.file_uploader("3. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î RawdataALL.csv", type=["csv"])
tab1, tab2 = st.tabs(["Process 1: Layout Joiner", "Process 2: Raw Data Model"])
with tab1:
    st.header("üîó ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå Layout Master ‡πÅ‡∏•‡∏∞ Style List")
    st.markdown("‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå `layout_master.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv`")
    if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Layout Joiner", key="btn1"):
        if uploaded_layout_master and uploaded_stylelistcode:
            with st.spinner('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå...'):
                st.session_state.df_result1 = process_layout_joiner(uploaded_layout_master, uploaded_stylelistcode)
            if st.session_state.df_result1 is not None:
                st.success("‚úÖ ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå `layout_master.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv` ‡∏Å‡πà‡∏≠‡∏ô")
    if 'df_result1' in st.session_state and st.session_state.df_result1 is not None:
        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
        st.dataframe(st.session_state.df_result1)
        csv_data = st.session_state.df_result1.to_csv(index=False).encode('utf-8')
        st.download_button(label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (Layout_week18_22.csv)",data=csv_data,file_name='Layout_week18_22.csv',mime='text/csv')
with tab2:
    st.header("üìà ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Raw Data ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    st.markdown("‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå `RawdataALL.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv`")
    if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• Raw Data Model", key="btn2"):
        if uploaded_rawdata_all and uploaded_stylelistcode:
            with st.spinner('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...'):
                st.session_state.df_result2 = process_rawdata_model(uploaded_rawdata_all, uploaded_stylelistcode)
            if 'df_result2' in st.session_state and st.session_state.df_result2 is not None:
                st.success("‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå `RawdataALL.csv` ‡πÅ‡∏•‡∏∞ `stylelistcode.csv` ‡∏Å‡πà‡∏≠‡∏ô")
    if 'df_result2' in st.session_state and st.session_state.df_result2 is not None:
        st.subheader("üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
        st.dataframe(st.session_state.df_result2)
        csv_data = st.session_state.df_result2.to_csv(index=False).encode('utf-8')
        st.download_button(label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (RAWDATA_MODEL_ALL1.csv)",data=csv_data,file_name='RAWDATA_MODEL_ALL1.csv',mime='text/csv')
